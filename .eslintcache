[{"D:\\EDUREKA\\Chirag's first website\\zomato-clone-chirag\\src\\index.js":"1","D:\\EDUREKA\\Chirag's first website\\zomato-clone-chirag\\src\\reportWebVitals.js":"2","D:\\EDUREKA\\Chirag's first website\\zomato-clone-chirag\\src\\Components\\Home.js":"3","D:\\EDUREKA\\Chirag's first website\\zomato-clone-chirag\\src\\Components\\Router.js":"4","D:\\EDUREKA\\Chirag's first website\\zomato-clone-chirag\\src\\Components\\Filter.js":"5","D:\\EDUREKA\\Chirag's first website\\zomato-clone-chirag\\src\\Components\\Details.js":"6","D:\\EDUREKA\\Chirag's first website\\zomato-clone-chirag\\src\\Components\\Header.js":"7","D:\\EDUREKA\\Chirag's first website\\zomato-clone-chirag\\src\\Components\\Wallpaper.js":"8","D:\\EDUREKA\\Chirag's first website\\zomato-clone-chirag\\src\\Components\\QuickSearch.js":"9"},{"size":240,"mtime":1618320159067,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":1142,"mtime":1618508659581,"results":"13","hashOfConfig":"11"},{"size":538,"mtime":1618324792996,"results":"14","hashOfConfig":"11"},{"size":15123,"mtime":1621788509288,"results":"15","hashOfConfig":"11"},{"size":15080,"mtime":1621787995041,"results":"16","hashOfConfig":"11"},{"size":12902,"mtime":1621762840050,"results":"17","hashOfConfig":"11"},{"size":3308,"mtime":1621764037471,"results":"18","hashOfConfig":"11"},{"size":1779,"mtime":1621763976381,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1m0y124",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"22"},"D:\\EDUREKA\\Chirag's first website\\zomato-clone-chirag\\src\\index.js",[],["45","46"],"D:\\EDUREKA\\Chirag's first website\\zomato-clone-chirag\\src\\reportWebVitals.js",[],"D:\\EDUREKA\\Chirag's first website\\zomato-clone-chirag\\src\\Components\\Home.js",["47","48"],"import React from 'react';\r\nimport Wallpaper from './Wallpaper';\r\nimport QuickSearch from './QuickSearch';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Home extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            locations: [],\r\n            mealtypes: []\r\n        }\r\n    }\r\n\r\n\r\n\r\n   componentDidMount(){\r\n    sessionStorage.clear();\r\n\r\n       axios({\r\n        method: 'GET',\r\n        url: 'http://localhost:2022/locations',\r\n        headers: {'Content-Type': 'application/json'}\r\n\r\n       }).\r\n       then(response => this.setState({locations: response.data.area}))\r\n       .catch()\r\n\r\n       axios({\r\n        method: 'GET',\r\n        url: 'http://localhost:2022/mealtypes',\r\n        headers: {'Content-Type': 'application/json'}\r\n\r\n       }).\r\n       then(response => this.setState({mealtypes: response.data.mealtypes}))\r\n       .catch()\r\n\r\n   }\r\n\r\n\r\n\r\nrender(){\r\n    let {locations, mealtypes} = this.state;\r\n    return(\r\n    <div>\r\n        <Wallpaper ddLocations = {locations}/>\r\n        <QuickSearch mealtypeOptions = {mealtypes}/>\r\n        \r\n\r\n    </div>\r\n    )\r\n}\r\n}   \r\n\r\n\r\nexport default Home;","D:\\EDUREKA\\Chirag's first website\\zomato-clone-chirag\\src\\Components\\Router.js",[],"D:\\EDUREKA\\Chirag's first website\\zomato-clone-chirag\\src\\Components\\Filter.js",["49","50","51","52","53","54","55","56","57","58","59","60","61","62"],"\r\nimport React from 'react';\r\nimport \"../Styles/Filter.css\";\r\nimport queryString from 'query-string';\r\nimport axios from 'axios';\r\n\r\nclass Filter extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            restaurant: [],\r\n            location: undefined,\r\n            mealtype: undefined,\r\n            cuisine: [],\r\n            lCost: undefined,\r\n            hCost: undefined,\r\n            sort: undefined,\r\n            page: undefined,\r\n            locations: []\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        const qs = queryString.parse(this.props.location.search);\r\n        const location = qs.location;\r\n        const mealtype = qs.mealtype;\r\n        \r\n\r\n        const inputObj = {\r\n            mealtypeId: mealtype,\r\n            locationId: location,\r\n\r\n        };\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:2022/filter',\r\n            headers: {'Content-Type' : 'application/json'},\r\n            data : inputObj\r\n        })\r\n        .then(response => this.setState({restaurant: response.data.Restaurants, location: location, mealtype: mealtype}))\r\n        .catch();\r\n\r\n        axios({\r\n            method: 'GET',\r\n            url: 'http://localhost:2022/locations',\r\n            headers: {'Content-Type': 'application/json'}\r\n    \r\n           }).\r\n           then(response => this.setState({locations: response.data.area}))\r\n           .catch()\r\n    };\r\n\r\n\r\n    apiCall = (inputObj) => {\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:2022/filter',\r\n            headers: {'Content-Type' : 'application/json'},\r\n            data : inputObj\r\n        })\r\n        .then(response => this.setState({restaurant: response.data.Restaurants, sort: inputObj.sort, \r\n            hCost: inputObj.hCost, lCost: inputObj.lCost, cuisine: inputObj.cuisine, page: inputObj.page}))\r\n        .catch();\r\n    }\r\n\r\n    handleNavigate = (resId) => {\r\n        this.props.history.push(`/details?restaurant=${resId}`)\r\n    }\r\n\r\n\r\n\r\n        handleSortChange = (sort) => {\r\n            const {location, mealtype, lCost, hCost, cuisine, page, } = this.state;\r\n\r\n            const inputObj = {\r\n                sort: sort,\r\n                mealtypeId: mealtype,\r\n                locationId: location,\r\n                lCost: lCost,\r\n                hCost: hCost,\r\n                page: page,\r\n                cuisine: cuisine.length == 0 ? undefined : cuisine,\r\n           \r\n    };\r\n    axios({\r\n        method: 'POST',\r\n        url: 'http://localhost:2022/filter',\r\n        headers: {'Content-Type' : 'application/json'},\r\n        data : inputObj\r\n    })\r\n    .then(response => this.setState({restaurant: response.data.Restaurants, sort: sort}))\r\n    .catch();\r\n\r\n  \r\n }\r\n\r\n\r\n    handleCostChange = (lCost, hCost) => {\r\n        const {location, mealtype, sort, page, cuisine} = this.state;\r\n\r\n        const inputObj = {\r\n            sort: sort,\r\n            mealtypeId: mealtype,\r\n            locationId: location,\r\n            lCost: lCost,\r\n            hCost: hCost,\r\n            page: page,\r\n            cuisine: cuisine.length == 0 ? undefined : cuisine\r\n       \r\n};\r\n\r\naxios({\r\n    method: 'POST',\r\n    url: 'http://localhost:2022/filter',\r\n    headers: {'Content-Type' : 'application/json'},\r\n    data : inputObj\r\n})\r\n.then(response => this.setState({restaurant: response.data.Restaurants, lCost: lCost, hCost: hCost}))\r\n.catch();\r\n}\r\n    \r\n\r\n\r\n    handleCuisineChange = (cuisineId) => {\r\n        const {location, mealtype, sort, lCost, hCost, page, cuisine} = this.state;\r\n\r\n        const temp_cuisine = cuisine.slice()\r\n\r\n\r\nif (temp_cuisine.indexOf(cuisineId) == -1 ){\r\n    temp_cuisine.push(cuisineId);\r\n}\r\n\r\nelse {\r\n    const index = temp_cuisine.indexOf(cuisineId);\r\n    temp_cuisine.splice(index, 1);\r\n}\r\n\r\n\r\n        const inputObj = {\r\n            sort: sort,\r\n            mealtypeId: mealtype,\r\n            locationId: location,\r\n            lCost: lCost,\r\n            hCost: hCost,\r\n            cuisine: temp_cuisine.length == 0 ? undefined : temp_cuisine,\r\n            page: page\r\n        }\r\n\r\n      \r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:2022/filter',\r\n            headers: {'Content-Type' : 'application/json'},\r\n            data : inputObj\r\n        })\r\n        .then(response => this.setState({restaurant: response.data.Restaurants, cuisine: cuisine}))\r\n        .catch();\r\n    }\r\n\r\n\r\n\r\n    handlePageChange = (page) => {\r\n        const {location, mealtype, sort, lCost, hCost, cuisine} = this.state;\r\n\r\n        const inputObj = {\r\n            sort: sort,\r\n            mealtypeId: mealtype,\r\n            locationId: location,\r\n            lCost: lCost,\r\n            hCost: hCost,\r\n            cuisine: cuisine.length == 0 ? undefined : cuisine,\r\n            page: page\r\n        }\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:2022/filter',\r\n            headers: {'Content-Type' : 'application/json'},\r\n            data : inputObj\r\n        })\r\n        .then(response => this.setState({restaurant: response.data.Restaurants, page: page}))\r\n        .catch();\r\n    }\r\n\r\n    handleLocationChange = (event) => {\r\n        const location = event.target.value;\r\n        const {mealtype, sort, lCost, hCost, cuisine, page} = this.state;\r\n\r\n           const inputObj = {\r\n            sort: sort,\r\n            mealtypeId: mealtype,\r\n            locationId: location,\r\n            lCost: lCost,\r\n            hCost: hCost,\r\n            cuisine: cuisine.length == 0 ? undefined : cuisine,\r\n            page: page\r\n          \r\n        };\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:2022/filter',\r\n            headers: {'Content-Type' : 'application/json'},\r\n            data : inputObj\r\n        })\r\n        .then(response => this.setState({restaurant: response.data.Restaurants, location: location}))\r\n        .catch();\r\n    };\r\n    \r\n\r\n\r\n\r\n  \r\n \r\n\r\nrender(){\r\n    const {restaurant, locations} = this.state;\r\n    \r\n    \r\n\r\n    return(\r\n        <div>\r\n\r\n        <div class = \"container\"> \r\n            <div className = \"row\">\r\n            <div id = \"breakfast_places\"> {`Restaurants`}</div>\r\n\r\n        \r\n                    <div className = \"col-sm-4 col-md-4 col-lg-4\" id =\"filter\">\r\n                        \r\n                        \r\n                            <div className=\"filters\">Filters/Sort</div>\r\n                            <span id =\"iconToggle\" className=\"glyphicon glyphicon-chevron-down toggle-span\"  data-bs-toggle=\"collapse\"\r\n                            data-bs-target = \"#demo\"></span>\r\n                            <div id =\"demo\" className=\"collapse show\">\r\n\r\n                                <h3 className=\"selectlocation\"> Select location</h3>\r\n                                <select id=\"location_search_page_box\" onChange = {this.handleLocationChange}>\r\n                                    <option value=\"0\" className=\"searchlocation1\" disabled selected >Select location</option>\r\n                                    {locations.map((item) => {\r\n                        return <option value = {item.location_id}> {item.name} </option>\r\n                    })}\r\n                                \r\n                                </select>\r\n                               \r\n                                <h3 className=\"cuisine\"> Cuisine</h3>\r\n                                <div className=\"north\">\r\n                                    <input type=\"checkbox\" className=\"checkboxdesign\" onChange = {() => this.handleCuisineChange(1)}/>\r\n                                    <span className=\"foodtype\"> North Indian </span>     \r\n                                </div>\r\n                                <div className=\"south\">\r\n                                    <input type=\"checkbox\" className=\"checkboxdesign\" onChange = {() => this.handleCuisineChange(2)}/>\r\n                                    <span className=\"foodtype\"> South Indian </span>     \r\n                                </div>\r\n                                <div className=\"chine\">\r\n                                    <input type=\"checkbox\" className=\"checkboxdesign\" onChange = {() => this.handleCuisineChange(3)}/>\r\n                                    <span className=\"foodtype\"> Chinese </span>     \r\n                                </div>\r\n                                <div className=\"faste\">\r\n                                    <input type=\"checkbox\" className=\"checkboxdesign\" onChange = {() => this.handleCuisineChange(4)}/>\r\n                                    <span className=\"foodtype\"> Fast Food </span>     \r\n                                </div>\r\n                                <div className =\"treet\">\r\n                                    <input type=\"checkbox\" className=\"checkboxdesign\" onChange = {() => this.handleCuisineChange(5)}/>\r\n                                    <span className=\"foodtype\"> Street Food </span>     \r\n                                </div>\r\n\r\n\r\n                                <h3 className = \"costfortwo\">Cost For Two</h3>\r\n                                <div>\r\n                                    <input name=\"pricewise\" type=\"radio\" className=\"button\" onChange = {() => this.handleCostChange(1,500)}/> \r\n                                    <span className=\"money\"> Less than ₹ 500 </span>\r\n                                </div>\r\n                                <div>\r\n                                    <input name=\"pricewise\" type=\"radio\" className=\"button\" onChange = {() => this.handleCostChange(500,1000)}/> \r\n                                    <span className=\"money\"> ₹ 500 to ₹ 1000 </span>\r\n                                </div> \r\n                                <div>\r\n                                    <input name=\"pricewise\" type=\"radio\" className=\"button\" onChange = {() => this.handleCostChange(1000,1500)}/> \r\n                                    <span className=\"money\"> ₹ 1000 to ₹ 1500 </span>\r\n                                </div> \r\n                                <div>\r\n                                    <input name=\"pricewise\" type=\"radio\" className=\"button\" onChange = {() => this.handleCostChange(1500,2000)}/> \r\n                                    <span className=\"money\"> ₹ 1500 to ₹ 2000 </span>\r\n                                </div> \r\n                                <div>\r\n                                    <input name=\"pricewise\"   type=\"radio\" className=\"button\" onChange = {() => this.handleCostChange(2000,10000)}/> \r\n                                    <span className=\"money\"> ₹ 2000+</span>\r\n\r\n\r\n                                </div>\r\n                                <div id =\"sortmain\">\r\n                                <h2 className =\"sort\">Sort</h2>\r\n                                    <input className=\"button\" type=\"radio\" name=\"pricefilter\" onChange = {() => this.handleSortChange(1)}/>\r\n                                    <span className=\"pricelowtohigh\"> Price low to high</span>\r\n                                    <br/>\r\n                                    <input className=\"button\" type=\"radio\" name=\"pricefilter\" onChange = {() => this.handleSortChange(-1)}/>\r\n                                    <span className=\"pricehightolow\"> Price high to low</span>\r\n                                </div>       \r\n                            </div>\r\n                             \r\n                    </div> \r\n\r\n\r\n\r\n                    <div className = \"col-sm-8 col-md-8 col-lg-8\" id =\"description\"> \r\n                    \r\n                  {restaurant && restaurant.length > 0 ? restaurant.map((item) => {\r\n                      return <div className = \"box1\" onClick = {() => this.handleNavigate(item._id)}>\r\n                            \r\n                      <div className=\"foodimagediv\" style={{display:\"inline-block\", width:\"30%\"}}>\r\n                          <img className=\"foodimage\" src=\"./Assets/shutterstock_1154073754@3x.png\"/> \r\n                      </div>\r\n                      <div className=\"nameaddress\" style={{display:\"inline-block\", width:\"60%\", verticalAlign: \"top\"}}>\r\n                          <div className=\"restaurantname\">{item.name}</div>\r\n                          <div className=\"mainlocation\"> {item.city_name}</div>\r\n                          <div className=\"mainaddress\">{item.address}</div>\r\n                      </div>\r\n                      <hr className=\"line\"/>\r\n                      <div className=\"foodandprice\">\r\n                          <div className=\"foodandcost1\" style={{display:\"inline-block\", width:\"30%\"}}>\r\n                              <div className=\"cuisines_costfortwo\"> CUISINES: </div>\r\n                              <div className=\"cuisines_costfortwo\"> COST FOR TWO: </div>\r\n                          </div>\r\n                          <div className=\"foodandcost2\" style={{display:\"inline-block\", width:\"60%\"}}>\r\n                              <div className=\"type_price\"> {item.cuisines.map((i) => `${i.name}. `)}</div>\r\n                              <div className=\"type_price\"> {item.cost}</div>\r\n                          </div>\r\n                          \r\n                  </div>\r\n              </div>\r\n                  }) : <div className =\"no-records\">Sorry. No results found</div>}\r\n\r\n\r\n                    <div id =\"pagination\">\r\n                       <nav aria-label=\"Page navigation example\">\r\n                           <ul className=\"pagination \">\r\n                           <li className=\"page-item\">\r\n                               <a className=\"page-link\" href=\"#\" aria-label=\"Previous\">\r\n                               <span aria-hidden=\"true\">&laquo;</span>\r\n                               <span className=\"sr-only\">Previous</span>\r\n                               </a>\r\n                           </li>\r\n                           <li className=\"page-item\" onClick = {() => this.handlePageChange(1)}><a className=\"page-link\" href=\"#\">1</a></li>\r\n                           <li className=\"page-item\" onClick = {() => this.handlePageChange(2)}><a className=\"page-link\" href=\"#\">2</a></li>\r\n                           <li className=\"page-item\" onClick = {() => this.handlePageChange(3)}><a className=\"page-link\" href=\"#\">3</a></li>\r\n                           <li className=\"page-item\" onClick = {() => this.handlePageChange(4)}><a className=\"page-link\" href=\"#\">4</a></li>\r\n                           <li className=\"page-item\">\r\n                               <a className=\"page-link\" href=\"#\" aria-label=\"Next\">\r\n                               <span aria-hidden=\"true\">&raquo;</span>\r\n                               <span className=\"sr-only\">Next</span>\r\n                               </a>\r\n                           </li>\r\n                           </ul>\r\n                       </nav>\r\n                   </div> \r\n                      \r\n                    \r\n                  \r\n                    \r\n\r\n                    \r\n                    </div>\r\n                </div>\r\n        </div>\r\n\r\n        </div>\r\n\r\n        \r\n        \r\n        \r\n    )\r\n}\r\n}\r\n   \r\n\r\n\r\nexport default Filter;","D:\\EDUREKA\\Chirag's first website\\zomato-clone-chirag\\src\\Components\\Details.js",["63","64","65","66","67","68","69","70","71","72","73","74","75","76"],"import React from 'react';\r\nimport queryString from 'query-string'\r\nimport axios from 'axios'\r\nimport '../Styles/details.css'\r\nimport Modal from 'react-modal'\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      width: \"80%\",\r\n      padding: '10px 20px 20px 20px'\r\n    }\r\n  };\r\n\r\n  const customStyles1 = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      \r\n      padding: '10px 20px 20px 20px'\r\n    }\r\n  };\r\n\r\nclass Details extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            restaurant: {},\r\n            galleryModalIsOpen: false,\r\n            menuItemsModalIsOpen: false,\r\n            orderItemsModalIsOpen: false,\r\n            resId: undefined,\r\n            menuItems: [],\r\n            subTotal: 0,\r\n            order: [],\r\n            name: undefined,\r\n            email: undefined,\r\n            mobileNumber: undefined,\r\n            address: undefined\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const qs = queryString.parse(this.props.location.search);\r\n        const resId = qs.restaurant;\r\n\r\n        axios({\r\n            method: 'GET',\r\n            url: `http://localhost:2022/restaurantbyid/${resId}`,\r\n            headers: {'Content-Type' : 'application/json'}\r\n        })\r\n        .then(response => {\r\n            this.setState({restaurant: response.data.Restaurants, resId})\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    handleModal = (state,value) => {\r\n        const {resId, menuItems} = this.state;\r\n\r\n        this.setState({[state]: value});\r\n\r\n        if(state == 'menuItemsModalIsOpen' && value == true){\r\n            axios({\r\n                method: 'GET',\r\n                url: `http://localhost:2022/menuitemsbyrestaurant/${resId}`,\r\n                headers: {'Content-type': 'application/json'}\r\n            })\r\n            .then(response =>\r\n                this.setState({\r\n                    menuItems: response.data.MenuItems\r\n                }))\r\n            .catch()\r\n        }\r\n\r\n        if (state == 'orderItemsModalIsOpen' && value == true){\r\n            const order = menuItems.filter(item => item.qty != 0);\r\n            this.setState({order: order})\r\n        }\r\n    }\r\n\r\n    addItem = (index, operationType) => {\r\n        let total = 0;\r\n        const items = [...this.state.menuItems];\r\n        const item = items[index];\r\n\r\n        if (operationType == 'add'){\r\n            item.qty = item.qty + 1;\r\n        }\r\n\r\n        else{\r\n            item.qty = item.qty - 1;\r\n        }\r\n\r\n        items[index] = item;\r\n        items.map((item) => {\r\n            total += item.qty * item.price;\r\n        })\r\n\r\n        this.setState({menuItems: items, subTotal: total})\r\n    };\r\n\r\n    handleChange = (event, state) => {\r\n        this.setState({ [state] : event.target.value });\r\n    }\r\n\r\n\r\n    isDate(val) {\r\n        // Cross realm comptatible\r\n        return Object.prototype.toString.call(val) === '[object Date]'\r\n    }\r\n\r\n    isObj = (val) => {\r\n        return typeof val === 'object'\r\n    }\r\n\r\n    stringifyValue = (val) => {\r\n        if (this.isObj(val) && !this.isDate(val)) {\r\n            return JSON.stringify(val)\r\n        } else {\r\n            return val\r\n        }\r\n    }\r\n\r\n    buildForm = ({ action, params }) => {\r\n        const form = document.createElement('form')\r\n        form.setAttribute('method', 'post')\r\n        form.setAttribute('action', action)\r\n\r\n        Object.keys(params).forEach(key => {\r\n            const input = document.createElement('input')\r\n            input.setAttribute('type', 'hidden')\r\n            input.setAttribute('name', key)\r\n            input.setAttribute('value', this.stringifyValue(params[key]))\r\n            form.appendChild(input)\r\n        })\r\n\r\n        return form\r\n    }\r\n\r\n    post = (details) => {\r\n        const form = this.buildForm(details);\r\n        document.body.appendChild(form);\r\n        form.submit()\r\n        form.remove()\r\n    }\r\n\r\n    getData = (data) => {\r\n        return fetch(`http://localhost:2022/payment`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(response => response.json()).catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    handlePayment = () => {\r\n        const { subTotal, email, order, resId } = this.state;\r\n\r\n        const inputObj = {\r\n            email: email,\r\n            restaurant_id: JSON.stringify(resId),\r\n            items: order,\r\n            amount: subTotal\r\n            \r\n            \r\n            }\r\n            \r\n                   axios({\r\n                       method:'POST',\r\n                       url: 'http://localhost:2022/addorder',\r\n                       headers:{'Content-Type': 'application/json'},\r\n                       data: inputObj\r\n                   })\r\n                   .then(response => this.setState({orders: response.data.order, email: email, restaurant_id: resId, items: order, amount: subTotal}))\r\n                   .catch() ;\r\n                \r\n            \r\n        \r\n        var re = /\\S+@\\S+\\.\\S+/;\r\n        if (re.test(email)) {\r\n            // Payment API Call\r\n            this.getData({ amount: subTotal, email: email }).then(response => {\r\n                var information = {\r\n                    action: \"https://securegw-stage.paytm.in/order/process\",\r\n                    params: response\r\n                }\r\n                this.post(information)\r\n            })\r\n        }\r\n        else {\r\n            alert('Email is not valid, Please check it');\r\n        };\r\n\r\n    }\r\n\r\n    \r\n\r\n   \r\n  \r\n\r\nrender(){\r\nconst {restaurant, galleryModalIsOpen, menuItemsModalIsOpen, menuItems, subTotal, orderItemsModalIsOpen, email, order} = this.state;\r\n\r\n    return(\r\n        <div>\r\n        <div>\r\n    <div className = \"container\">\r\n        <div className = \"row\">\r\n\r\n         <div className =\"col-sm-12 col-md-12 col-lg-12\" id = \"imageGallery\">   \r\n       <img src=\"Assets/shutterstock_1154073754@3x.png\" height = \"350px\" width = \"100%\"/>\r\n       <button type=\"button\" className=\"btn btn-light\" id = \"imgButton\" onClick = {()=>this.handleModal('galleryModalIsOpen', true)}>Click to view Image Gallery</button>\r\n        </div>\r\n\r\n        <div className =\"The-Big-Chill-Cakery\" > {restaurant.name}</div>\r\n        <div> <button type=\"button\" className=\"btn btn-outline-danger\" id =\"place-online-order\" onClick = {()=>this.handleModal('menuItemsModalIsOpen', true)} >Place online order</button></div>\r\n\r\n\r\n        <div>\r\n            <nav>\r\n                <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\r\n                  <button className=\"nav-link active\" id=\"nav-home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#nav-home\" type=\"button\" role=\"tab\" aria-controls=\"nav-home\" aria-selected=\"true\">Overview</button>\r\n                  \r\n                  <button className=\"nav-link\" id=\"nav-contact-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#nav-contact\" type=\"button\" role=\"tab\" aria-controls=\"nav-contact\" aria-selected=\"false\">Contact</button>\r\n                </div>\r\n              </nav>\r\n              <div className=\"tab-content\" id=\"nav-tabContent\">\r\n                <div className=\"tab-pane fade show active\" id=\"nav-home\" role=\"tabpanel\" aria-labelledby=\"nav-home-tab\">\r\n                    <div id =\"detail-header-one\"> About this place\r\n                    </div>\r\n                    <div className =\"detail-header-two\"> Cuisines\r\n                        <div className=\"detail-header-three\">{restaurant && restaurant.cuisines? restaurant.cuisines.map((item) =>`${item.name}, ` ) :null}</div>\r\n                    </div>\r\n                    <div className =\"detail-header-two\"> Average Cost\r\n                        <div className=\"detail-header-three\">{restaurant.cost} for two people(approx)</div>\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n                <div className=\"tab-pane fade\" id=\"nav-contact\" role=\"tabpanel\" aria-labelledby=\"nav-contact-tab\">\r\n                    <div id =\"detail-header-one\"> Restaurant contact details </div>\r\n\r\n                    <div className =\"detail-header-two\"> Phone number\r\n                        <div className=\"detail-header-three\">{restaurant.contact_number}</div>\r\n                    </div>\r\n                    <div className =\"detail-header-two\"> Address\r\n                        <div className=\"detail-header-three\">{restaurant.address}</div>\r\n                    </div>\r\n\r\n                </div>\r\n              </div>\r\n        </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<Modal\r\n          isOpen={galleryModalIsOpen}\r\n          style={customStyles}\r\n        >\r\n        <div >\r\n            <div className =\"glyphicon glyphicon-remove\" id=\"closeICon\" onClick = {()=>this.handleModal('galleryModalIsOpen', false)}></div>\r\n        <Carousel showThumbs = {false}>\r\n            {restaurant && restaurant.thumb? restaurant.thumb.map((path) => {\r\n                return <div>\r\n                <img className =\"gallery\" src={path}/>\r\n            </div>\r\n            }):null }\r\n                \r\n\r\n            </Carousel>\r\n        </div>\r\n    \r\n          \r\n        </Modal>\r\n         \r\n\r\n        <Modal  \r\n            isOpen={menuItemsModalIsOpen}\r\n          style={customStyles1}\r\n        >\r\n            <div style = {{\"width\": \"400px\"}}>\r\n            <div className =\"glyphicon glyphicon-remove\" id=\"closeICon\" \r\n            onClick = {()=>this.handleModal('menuItemsModalIsOpen', false)}></div>\r\n            <div className =\"restaurant-header\">{restaurant.name}</div>\r\n            <div className =\"food-itemDescription\">Menu</div>\r\n            <hr/>\r\n\r\n              {menuItems.map((item, index) => {\r\n                  return <div>\r\n                      <div>\r\n                        <div style = {{display: 'inline-block' , width: \"207px\" }}> \r\n                      <div className =\"food-itemName\">{item.name}</div>\r\n                      <div className =\"food-itemPrice\">{`₹ ${item.price}`}</div>\r\n                      <div className =\"food-itemDescription\">{item.description}</div>\r\n                      </div>\r\n                      <div className =\"food-add-position\">\r\n                          <div><img className =\"foodIcon\" src = {item.image}/></div>\r\n                      {item.qty == 0 ? <div><button type=\"button\" className=\"btn btn-outline-warning\" id = \"buttonCss\" onClick={() => this.addItem(index,'add')}>Add</button></div> :\r\n                      <div style = {{\"background-color\": \"#e2f1ff\"}}> <button type=\"button\" id = \"minus-buttonCss\" className=\"btn btn-danger\" onClick={() => this.addItem(index,'subtract')} >-</button> <span className =\"quantity\"> {item.qty}</span>\r\n                      <button type=\"button\" className=\"btn btn-success\" id = \"plus-buttonCss\"\r\n                      onClick={() => this.addItem(index,'add')}>+</button></div> }\r\n                      \r\n                      \r\n                      </div>\r\n                      <hr/>      \r\n                  </div>\r\n                  </div>\r\n              })} \r\n\r\n              <div className =\"total-amount-div\">{`Subtotal: ${subTotal}`} <button type=\"button\" className=\"btn btn-outline-danger pay-now\" onClick = {()=>this.handleModal('orderItemsModalIsOpen', true)}>Proceed</button></div>\r\n            </div>\r\n            <Modal\r\n          isOpen={orderItemsModalIsOpen}\r\n          style={customStyles1}\r\n        >       <div className =\"go-back-div\">\r\n\r\n                <div className =\"glyphicon glyphicon-arrow-left\" id=\"closeICon\" onClick = {()=>this.handleModal('orderItemsModalIsOpen', false)}></div>\r\n                <div className=\"food-itemDescription\" id =\"goBack\">Go Back</div>\r\n\r\n                </div>\r\n                <div className =\"restaurant-header\">{restaurant.name}</div>  \r\n                 \r\n\r\n             \r\n\r\n\r\n              <hr/>\r\n                <form>\r\n                <div style = {{ \"margin-top\": \"-15px\",\r\n    \"margin-bottom\": \"10px\"}}className=\"food-itemDescription\"> Please fill in your details </div>  \r\n\r\n  <div className=\"form-group order-detail-class\">\r\n    <label for=\"exampleInputEmail1\">Email address*</label>\r\n    <input type=\"email\" className=\"form-control loginForm-input\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" onChange = {(event) => this.handleChange(event,'email')}/>\r\n    <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n  </div>\r\n  <div className=\"form-group order-detail-class\">\r\n  <label for=\"form1\">Name</label>\r\n  <input type=\"text\" id=\"form1\" className=\"form-control loginForm-input\" placeholder=\"Name\" onChange = {(event) => this.handleChange(event,'name')}/>\r\n  \r\n  </div>\r\n  \r\n  <div className=\"form-group order-detail-class\">\r\n  <label for=\"form1\">Mobile Number</label>\r\n  <input type =\"tel\" maxLength=\"10\"\r\n   id=\"form1\" className=\"form-control loginForm-input\" placeholder=\"Mobile number\"  onChange = {(event) => this.handleChange(event,'mobileNumber')}/>\r\n  <small className=\"form-text text-muted\">Please enter proper Mobile Number</small>\r\n  </div>\r\n  <div class=\"form-group order-detail-class\">\r\n    <label for=\"exampleFormControlTextarea1\">Address</label>\r\n    <textarea className=\"form-control loginForm-input\" style = {{height: \"70px\"}} id=\"exampleFormControlTextarea1\" placeholder =\"Enter your address\" onChange = {(event) => this.handleChange(event,'address')}></textarea>\r\n  </div>\r\n\r\n  \r\n</form>\r\n<hr/>\r\n<div>\r\n<div  style = {{ \"margin-top\": \"-15px\",\r\n    \"margin-bottom\": \"10px\"}} className=\"food-itemDescription\">Order Details:</div>\r\n{menuItems.map((item => {\r\n                  return <div>\r\n                      {item.qty != 0 ? <div className =\"order-header\"> <span className =\"order-header-details\">{item.name} </span> \r\n                      <span style={{ color: \"#8c96ab\"}}> | </span>  <span className =\"order-header-details\"> Quantity: </span> {item.qty} <span style={{color: \"#8c96ab\"}}> | </span> <span className =\"order-header-details\"> Total: </span>{item.price}  </div> : null}\r\n                  </div>\r\n              }))}\r\n\r\n\r\n<div className =\"total-amount-div\">Total Amount : <span>{subTotal}</span></div>\r\n<button type=\"submit\" className=\"btn btn-danger make-payment\" onClick = {this.handlePayment}>Click to make payment</button>\r\n</div>\r\n\r\n        </Modal>\r\n\r\n\r\n\r\n        </Modal>\r\n        \r\n        </div>\r\n    )\r\n}\r\n}   \r\n\r\n\r\nexport default Details;","D:\\EDUREKA\\Chirag's first website\\zomato-clone-chirag\\src\\Components\\Header.js",["77","78"],"\r\nimport React from 'react';\r\nimport '../Styles/Header.css'\r\nimport {withRouter} from 'react-router-dom';\r\nimport Modal from 'react-modal'\r\nimport GoogleLogin from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport axios from 'axios';\r\n\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n  };\r\n\r\nclass Header extends React.Component {\r\n    \r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            loginModalIsOpen: false,\r\n            userName: undefined,\r\n            isLoggedIn: false,\r\n            loggingInModalIsOpen: false,\r\n            createAccountModalIsOpen: false,\r\n            firstname: undefined,\r\n            email: undefined,\r\n            password: undefined,\r\n            lastname: undefined,\r\n            address: undefined,\r\n            user:[]\r\n        }\r\n    }\r\n\r\n \r\n\r\n\r\n    handleClick = () => {\r\n        this.props.history.push('/')\r\n    };\r\n\r\n    handleLogin = () => {\r\n        this.setState({loginModalIsOpen: true})\r\n    }\r\n\r\n    closeLogin = () => {\r\n        this.setState({loginModalIsOpen: false, loggingInModalIsOpen: false, createAccountModalIsOpen: false})\r\n    }\r\n\r\n    handleLogout = () => {\r\n      const {isLoggedIn, userName} = this.state\r\n\r\n      var x = window.confirm(\"Are you sure you want to logout?\")\r\n\r\n      if (x == true) {\r\n        this.setState({isLoggedIn: false, userName: undefined})\r\n      } \r\n\r\n      else {\r\n        this.setState({isLoggedIn: true, userName: userName})\r\n      }\r\n        \r\n    }\r\n\r\n\r\n    responseGoogle = (response) => {\r\n        console.log(response);\r\n        this.setState({userName: response.profileObj.name, isLoggedIn: true, loginModalIsOpen: false});\r\n        \r\n      }\r\n\r\n    responseFacebook = (response) => {\r\n        console.log(response);\r\n        this.setState({userName: response.name, isLoggedIn: true, loginModalIsOpen: false});\r\n        \r\n      }\r\n\r\n      handleLoggingIn = () => {\r\n          this.setState({loggingInModalIsOpen: true});\r\n\r\n      }\r\n\r\n      handleLoginChange = (event, state) => {\r\n        this.setState({ [state] : event.target.value });\r\n    }\r\n\r\n      handleSubmit = () => {\r\n        \r\n\r\n    const {email,password} = this.state;\r\n\r\n    const inputObject= {\r\n      email: email,\r\n      password: password,\r\n   \r\n    }\r\n    \r\n    axios({\r\n      method: 'POST',\r\n      url: 'http://localhost:2022/login',\r\n      headers: {'Content-Type' : 'application/json'},\r\n      data : inputObject\r\n  })\r\n  .then(response =>\r\n     {\r\n\r\n      this.setState({\r\n      users: response.data.user[0], isLoggedIn: true, userName: response.data.user[0].firstname, loggingInModalIsOpen: false,loginModalIsOpen: false\r\n  }); alert(response.data.message);\r\n  \r\n}\r\n  )\r\n  .catch(error => {this.setState({users: undefined, userName: undefined}); alert(\"Incorrect ID or Password, Please try with proper credentials\")});\r\n\r\n  \r\n\r\n}\r\n\r\ncreateAccountButton = () => {\r\n  this.setState ({createAccountModalIsOpen: true, loggingInModalIsOpen: false})\r\n}\r\n\r\ncreateAccount = () => {\r\nconst {email, password, firstname, lastname, address} = this.state;\r\n\r\nconst inputObject = {\r\n  email: email,\r\n  password: password,\r\n  firstname: firstname,\r\n  lastname: lastname,\r\n  address: address\r\n}\r\n\r\naxios({\r\n  method: 'POST',\r\n  url: 'http://localhost:2022/adduser',\r\n  headers: {'Content-Type' : 'application/json'},\r\n  data : inputObject\r\n})\r\n.then(response => {this.setState({\r\n  user: response.data.user, firstname: firstname, lastname: lastname, password: password, email: email, address: address, createAccountModalIsOpen: false\r\n}); alert(response.data.message);\r\n}\r\n)\r\n.catch()\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n      \r\n\r\n  \r\n       \r\n        \r\n    \r\n    render(){\r\n      const {loginModalIsOpen, isLoggedIn, userName, loggingInModalIsOpen, createAccountModalIsOpen} = this.state;\r\n \r\n\r\n        return(\r\n    <div>\r\n            \r\n        <div className = \"redbar\">\r\n            \r\n            <div className = \"container\"> \r\n                <div className = \"row\">\r\n                       \r\n                <div className=\"topredbar\">\r\n                            \r\n                            <div onClick = {this.handleClick} style={{display: \"inline-block\"}}> \r\n                            <div className=\"ellipse\" >\r\n                               <div className =\"e\" >  e!  </div>\r\n                            </div>\r\n                            </div>\r\n                            {isLoggedIn ? <div className =\"login-create\">\r\n                            <button type=\"button\" class=\"btn btn-link\"  id=\"loginFilter\">{userName}</button>\r\n                        <button type=\"button\" className=\"btn btn-link\" id=\"createFilter\" onClick = {this.handleLogout}>Logout</button>\r\n                        </div> \r\n                        : <div className =\"login-create\">\r\n                        <button type=\"button\" class=\"btn btn-link\"  id=\"loginFilter\" onClick={this.handleLogin}>Login</button>\r\n                    <button type=\"button\" className=\"btn btn-link\" id=\"createFilter\" onClick = {this.createAccountButton}>Create an account</button>\r\n                    </div>  }\r\n                       \r\n                </div>       \r\n                \r\n                </div>\r\n            </div>\r\n            <div>\r\n        \r\n        <Modal\r\n          isOpen={loginModalIsOpen}\r\n    \r\n          style={customStyles}\r\n          >\r\n\r\n            <div className =\"signin\" style ={{display: \"inline-block\"}}>Sign in</div>\r\n              <div className =\"glyphicon glyphicon-remove\" style ={{display: \"inline-block\"}} id=\"closeICon\" onClick = {this.closeLogin}></div>\r\n              <div  className =\"full-login-modal\">\r\n              \r\n              <div>\r\n              <GoogleLogin\r\n                clientId=\"527468700079-somrem3jv1t62q5b4nqq8kuvcpi9da51.apps.googleusercontent.com\"\r\n                buttonText=\"Login with Google\"\r\n                onSuccess={this.responseGoogle}\r\n                onFailure={this.responseGoogle}\r\n                cookiePolicy={'single_host_origin'}\r\n                className=\"googleButton\"\r\n                />\r\n                </div>\r\n                <div>\r\n                <FacebookLogin\r\n                    appId=\"318634626359158\"\r\n                    textButton = \"Login with Facebook\"\r\n                    fields=\"name,email,picture\"\r\n                    callback={this.responseFacebook}\r\n                    \r\n                     />\r\n                   </div>\r\n                <div>\r\n                <button type=\"button\" className=\"btn btn-outline-danger loginModalCss\"  onClick = {this.handleLoggingIn}>Login with your account</button>\r\n                <div>\r\n                \r\n                <Modal\r\n                        isOpen={loggingInModalIsOpen}\r\n                    \r\n                        style={customStyles}\r\n                        >\r\n                          <div className =\"signin\" style ={{display: \"inline-block\"}}>Login</div>\r\n                            <div className =\"glyphicon glyphicon-remove\" id=\"closeICon\" onClick = {this.closeLogin}></div>\r\n                        <div className = \"loginForm\">\r\n \r\n                            \r\n                              <hr style={{\"margin-top\": \"-20px\"}}/>\r\n  <div class=\"form-group loginForm-details \">\r\n    <label for=\"exampleInputEmail1\">Email address</label>\r\n    <input type=\"email\" className=\"form-control loginForm-input\" id=\"exampleInputEmail1\" name =\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" onChange = {(event) => this.handleLoginChange(event,'email')}/>\r\n    <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n  </div>\r\n  <div class=\"form-group loginForm-details\">\r\n    <label for=\"exampleInputPassword1\">Password</label>\r\n    <input type=\"password\" className=\"form-control loginForm-input\" id=\"exampleInputPassword1\" name =\"password\" placeholder=\"Password\" onChange = {(event) => this.handleLoginChange(event,'password')}/>\r\n  </div>\r\n\r\n<button type=\"submit\" className=\"btn btn-danger submitButton\" onClick = {this.handleSubmit}>Submit</button>\r\n\r\n<hr/>\r\n<div className =\"signup\">Don't have an account? <br/> <button type=\"button\" className=\"btn btn-link signup-button\" onClick = {this.createAccountButton}>Create one now!</button></div>\r\n</div>\r\n                                {/* <div>\r\n                                <div>Enter Email</div>\r\n                                <input type='text' placeholder='Fill your email here'  name = \"email\" onChange = {(event) => this.handleLoginChange(event,'email')}/> \r\n                                <div>Enter Password</div>\r\n                                <input type='password' placeholder='Fill your password here'  name = \"password\" onChange = {(event) => this.handleLoginChange(event,'password')}/> \r\n                                <div>\r\n                                <button type=\"button\" class=\"btn btn-outline-danger\" onClick = {this.handleSubmit}>Submit</button>\r\n                                </div>\r\n                                </div>\r\n                                */}\r\n                                \r\n                            \r\n                            \r\n\r\n              </Modal>\r\n                </div>\r\n                </div>\r\n\r\n                </div>\r\n                <hr className=\"signup-line\"/>\r\n                <div className =\"signup\">Don't have an account? <br/> <button type=\"button\" class=\"btn btn-link signup-button\" onClick = {this.createAccountButton}>Create one now!</button></div>\r\n        </Modal>\r\n\r\n        <Modal\r\n        isOpen={createAccountModalIsOpen}\r\n    \r\n        style={customStyles}>\r\n          <div className=\"create-account-div\">\r\n          <div className =\"signin\" style ={{display: \"inline-block\"}}>Create your account</div>\r\n          <div className =\"glyphicon glyphicon-remove\" id=\"closeICon\" onClick = {this.closeLogin}></div>\r\n          <hr/>\r\n          <div >\r\n            \r\n          \r\n          \r\n  <div className =\"loginForm-details\">\r\n    <label for=\"validationCustom01\" class=\"form-label\">First name</label>\r\n    <input type=\"text\" className=\"form-control loginForm-input\" id=\"validationCustom01\" placeholder =\"Enter your first name\" onChange = {(event) => this.handleLoginChange(event,'firstname')} required/>\r\n    <div class=\"valid-feedback\">\r\n      Looks good!\r\n    </div>\r\n  </div>\r\n  <hr/>\r\n  <div className =\"loginForm-details\">\r\n    <label for=\"validationCustom02\" className=\"form-label\">Last name</label>\r\n    <input type=\"text\" className=\"form-control loginForm-input\" id=\"validationCustom02\" placeholder =\"Enter your last name\"onChange = {(event) => this.handleLoginChange(event,'lastname')} required/>\r\n    <div className=\"valid-feedback\">\r\n      Looks good!\r\n    </div>\r\n  </div>\r\n\r\n  <hr/>\r\n\r\n  <div>\r\n  <div className=\"form-group loginForm-details\">\r\n    <label for=\"exampleInputEmail1\">Email address</label>\r\n    <input type=\"email\" className=\"form-control loginForm-input\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" onChange = {(event) => this.handleLoginChange(event,'email')} placeholder=\"Enter email\"/>\r\n    <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n  </div>\r\n<hr/>\r\n  <div className =\"loginForm-details\">\r\n    <label for=\"validationDefault02\" className=\"form-label\">Password</label>\r\n    <input type=\"password\" className=\"form-control loginForm-input\" id=\"validationDefault02\" placeholder=\"Enter your password\" onChange = {(event) => this.handleLoginChange(event,'password')} required/>\r\n  </div>\r\n<hr/>\r\n  </div>\r\n  <div className =\"loginForm-details\">\r\n    <label for=\"validationCustom03\" class=\"form-label\">Address</label>\r\n    <input type=\"text\" className=\"form-control loginForm-input\" id=\"validationCustom03\" placeholder=\"Enter your address\" onChange = {(event) => this.handleLoginChange(event,'address')} required/>\r\n    <div className=\"invalid-feedback\">\r\n      Please provide a valid Address.\r\n    </div>\r\n  </div>\r\n<hr/>\r\n  \r\n  \r\n\r\n    <div className=\"form-check loginForm-details\">\r\n      <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"invalidCheck\" required/>\r\n      <label className=\"form-check-label\" for=\"invalidCheck\">\r\n        Agree to terms and conditions\r\n      </label>\r\n      <div className=\"invalid-feedback\">\r\n        You must agree before submitting.\r\n      </div>\r\n    </div>\r\n  \r\n\r\n    <button class=\"btn btn-danger submitButton\" type=\"submit\" onClick = {this.createAccount}>Submit form</button>\r\n  \r\n               \r\n\r\n          </div>\r\n</div>\r\n        </Modal>\r\n      </div>\r\n        </div>\r\n    \r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Header);","D:\\EDUREKA\\Chirag's first website\\zomato-clone-chirag\\src\\Components\\Wallpaper.js",["79","80","81","82","83"],"import React from 'react';\r\nimport '../Styles/Wallpaper.css';\r\nimport axios from 'axios';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n\r\nclass Wallpaper extends React.Component {\r\n\r\nconstructor(){\r\nsuper();\r\n\r\nthis.state = {\r\n    restaurantList: [],\r\n    suggestions: [],\r\n    searchText: undefined\r\n}\r\n}\r\n\r\n\r\nhandleLocationChange = (event) => {\r\n\r\nconst locationId = event.target.value;\r\nsessionStorage.setItem('locationId', locationId);\r\n\r\n\r\n\r\naxios({\r\nmethod: 'GET',\r\nurl: `http://localhost:2022/restaurantsbylocation/${locationId}`,\r\nheaders: {'Content-type': 'application/json'}\r\n})\r\n.then(response => this.setState({restaurantList: response.data.restaurant_list}))\r\n.catch()\r\n}\r\n\r\nhandleSearch = (event) => {\r\n    const {restaurantList} = this.state;\r\nconst searchText = event.target.value;\r\n\r\nlet filteredRestaurants;\r\n\r\nif (searchText == \"\"){\r\n    filteredRestaurants = [];\r\n}\r\nelse {\r\n    filteredRestaurants = restaurantList.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()));\r\n}\r\n\r\n\r\nthis.setState({suggestions: filteredRestaurants, searchText: searchText})\r\n\r\n}\r\n\r\nhandleItemClick = (item) => {\r\nthis.props.history.push(`/details?restaurant=${item._id}`)\r\n}\r\n\r\nrenderSuggestions = () => {\r\n    let {suggestions, searchText} = this.state;\r\n    if (suggestions.length === 0 && searchText){\r\n        return (\r\n            <ul className = \"foodList\">\r\n            <li className=\"detailList\">{`Try a different name for the restaurant`}</li>\r\n        </ul>\r\n        )\r\n    }\r\n    return (\r\n        <ul className = \"foodList\">\r\n            {suggestions.map((item, index) => <li className =\"detailList\"key = {index} onClick = {() => this.handleItemClick(item) }><div style={{display: \"inline-block\"}}><img className =\"img_thumb\"src = {item.thumb[0]}/>{` ${item.name} ,`} <span className =\"cityDetails\"> {`${item.city_name}`} </span> </div> <hr id=\"hLine\"/></li>)}\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\n    render(){\r\n        const {ddLocations} = this.props;\r\n        const {suggestions, searchText} = this.state\r\n        \r\n\r\n        return(\r\n            <div>\r\n                   <img className=\"homepageimage\" src=\"./Assets/Homepage background.jpg\"/>\r\n            <div className=\"centrelogo\"><b>e!</b></div>\r\n            <div className=\"find-best-restaurants\">Find the best restaurants, cafés, and bars</div>\r\n            <div>\r\n             <div className=\"searchlocation\">\r\n                <select className=\"typelocation\" onChange = {this.handleLocationChange}>\r\n                    <option value =\"0\" disabled selected> Please select a location </option>\r\n                    {ddLocations.map((item) => {\r\n                        return <option className =\"city-options\" value = {item.location_id}> {item.name} </option>\r\n                    })}\r\n                </select>\r\n                \r\n                 <span  className=\"glyphicon glyphicon-search\" id=\"searchicon\"></span>\r\n                 <input id =\"query\"className=\"search-for-restaurants\" type=\"search\" placeholder=\"Search for restaurants\" \r\n                 onChange = {this.handleSearch}/>\r\n                    {this.renderSuggestions()} \r\n                  \r\n\r\n            </div>\r\n                \r\n            </div>\r\n            </div>\r\n\r\n         \r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Wallpaper);","D:\\EDUREKA\\Chirag's first website\\zomato-clone-chirag\\src\\Components\\QuickSearch.js",["84"],"import React from 'react';\r\nimport \"../Styles/QuickSearch.css\"\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass QuickSearch extends React.Component {\r\n    handleClick = (mealtypeId) => {\r\n        const locationId = sessionStorage.getItem('locationId');\r\n      \r\n        if (locationId){\r\n            this.props.history.push(`/filter?mealtype=${mealtypeId}&location=${locationId}`)\r\n\r\n        }\r\n        else{this.props.history.push(`/filter?mealtype=${mealtypeId}`)}\r\n    }\r\n\r\n    render(){\r\n        \r\n        const {mealtypeOptions} = this.props;\r\n\r\n      \r\n\r\n        return(\r\n            <div>\r\n                <div className = \"centered\">    \r\n        \r\n        <div className=\"container no-padding\">\r\n            <div className=\"quick_search\">\r\n                <div className=\"quicksearches\"> Quick Searches</div>\r\n                <div className=\"discover_restaurants\"> Discover restaurants</div>\r\n            </div>\r\n            <div className=\"row\" id=\"mainrow\">\r\n\r\n            {mealtypeOptions.map((item)=>{\r\n                return <div className=\"col-sm-12 col-md-6 col-lg-4\" id=\"box1\" onClick = {() => this.handleClick(item.id)}>\r\n                <div style={{display: \"inline-block\", width:\"50%\"}}>\r\n                     <img src={item.image} height=\"140px\" width=\"130px\" /> \r\n                </div>\r\n                <div style={{display: \"inline-block\",width:\"40%\", verticalAlign: \"top\"}}>\r\n                    <div className=\"foodtitle\"> {item.name}</div>\r\n                    <div className=\"food_description\"> {item.content}</div>\r\n                </div>\r\n            </div>\r\n            })}\r\n\r\n               \r\n                \r\n            </div>\r\n        </div>\r\n    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(QuickSearch);",{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":28,"column":10,"nodeType":"91","messageId":"92","endLine":28,"endColumn":11,"fix":"93"},{"ruleId":"89","severity":1,"message":"90","line":37,"column":10,"nodeType":"91","messageId":"92","endLine":37,"endColumn":11,"fix":"94"},{"ruleId":"89","severity":1,"message":"90","line":51,"column":14,"nodeType":"91","messageId":"92","endLine":51,"endColumn":15,"fix":"95"},{"ruleId":"96","severity":1,"message":"97","line":85,"column":41,"nodeType":"98","messageId":"99","endLine":85,"endColumn":43},{"ruleId":"96","severity":1,"message":"97","line":111,"column":37,"nodeType":"98","messageId":"99","endLine":111,"endColumn":39},{"ruleId":"96","severity":1,"message":"97","line":133,"column":37,"nodeType":"98","messageId":"99","endLine":133,"endColumn":39},{"ruleId":"96","severity":1,"message":"97","line":149,"column":42,"nodeType":"98","messageId":"99","endLine":149,"endColumn":44},{"ruleId":"96","severity":1,"message":"97","line":175,"column":37,"nodeType":"98","messageId":"99","endLine":175,"endColumn":39},{"ruleId":"96","severity":1,"message":"97","line":199,"column":37,"nodeType":"98","messageId":"99","endLine":199,"endColumn":39},{"ruleId":"100","severity":1,"message":"101","line":316,"column":27,"nodeType":"102","endLine":316,"endColumn":101},{"ruleId":"103","severity":1,"message":"104","line":343,"column":32,"nodeType":"102","endLine":343,"endColumn":88},{"ruleId":"103","severity":1,"message":"104","line":348,"column":97,"nodeType":"102","endLine":348,"endColumn":131},{"ruleId":"103","severity":1,"message":"104","line":349,"column":97,"nodeType":"102","endLine":349,"endColumn":131},{"ruleId":"103","severity":1,"message":"104","line":350,"column":97,"nodeType":"102","endLine":350,"endColumn":131},{"ruleId":"103","severity":1,"message":"104","line":351,"column":97,"nodeType":"102","endLine":351,"endColumn":131},{"ruleId":"103","severity":1,"message":"104","line":353,"column":32,"nodeType":"102","endLine":353,"endColumn":84},{"ruleId":"96","severity":1,"message":"97","line":77,"column":18,"nodeType":"98","messageId":"99","endLine":77,"endColumn":20},{"ruleId":"96","severity":1,"message":"97","line":77,"column":53,"nodeType":"98","messageId":"99","endLine":77,"endColumn":55},{"ruleId":"96","severity":1,"message":"97","line":90,"column":19,"nodeType":"98","messageId":"99","endLine":90,"endColumn":21},{"ruleId":"96","severity":1,"message":"97","line":90,"column":55,"nodeType":"98","messageId":"99","endLine":90,"endColumn":57},{"ruleId":"96","severity":1,"message":"105","line":91,"column":61,"nodeType":"98","messageId":"99","endLine":91,"endColumn":63},{"ruleId":"96","severity":1,"message":"97","line":101,"column":27,"nodeType":"98","messageId":"99","endLine":101,"endColumn":29},{"ruleId":"106","severity":1,"message":"107","line":110,"column":26,"nodeType":"108","messageId":"109","endLine":110,"endColumn":28},{"ruleId":"110","severity":1,"message":"111","line":220,"column":106,"nodeType":"112","messageId":"113","endLine":220,"endColumn":111},{"ruleId":"110","severity":1,"message":"114","line":220,"column":113,"nodeType":"112","messageId":"113","endLine":220,"endColumn":118},{"ruleId":"100","severity":1,"message":"101","line":229,"column":8,"nodeType":"102","endLine":229,"endColumn":90},{"ruleId":"100","severity":1,"message":"101","line":285,"column":17,"nodeType":"102","endLine":285,"endColumn":55},{"ruleId":"100","severity":1,"message":"101","line":317,"column":32,"nodeType":"102","endLine":317,"endColumn":79},{"ruleId":"96","severity":1,"message":"97","line":318,"column":33,"nodeType":"98","messageId":"99","endLine":318,"endColumn":35},{"ruleId":"96","severity":1,"message":"105","line":382,"column":33,"nodeType":"98","messageId":"99","endLine":382,"endColumn":35},{"ruleId":"110","severity":1,"message":"115","line":59,"column":14,"nodeType":"112","messageId":"113","endLine":59,"endColumn":24},{"ruleId":"96","severity":1,"message":"97","line":63,"column":13,"nodeType":"98","messageId":"99","endLine":63,"endColumn":15},{"ruleId":"96","severity":1,"message":"97","line":42,"column":16,"nodeType":"98","messageId":"99","endLine":42,"endColumn":18},{"ruleId":"100","severity":1,"message":"101","line":69,"column":173,"nodeType":"102","endLine":69,"endColumn":223},{"ruleId":"110","severity":1,"message":"116","line":77,"column":16,"nodeType":"112","messageId":"113","endLine":77,"endColumn":27},{"ruleId":"110","severity":1,"message":"117","line":77,"column":29,"nodeType":"112","messageId":"113","endLine":77,"endColumn":39},{"ruleId":"100","severity":1,"message":"101","line":82,"column":20,"nodeType":"102","endLine":82,"endColumn":91},{"ruleId":"100","severity":1,"message":"101","line":36,"column":22,"nodeType":"102","endLine":36,"endColumn":75},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"120","text":"121"},{"range":"122","text":"121"},{"range":"123","text":"124"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Expected '!==' and instead saw '!='.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'email' is assigned a value but never used.","Identifier","unusedVar","'order' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","'suggestions' is assigned a value but never used.","'searchText' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[533,543],"\r\n       .",[783,793],[1347,1361],"\r\n           ."]